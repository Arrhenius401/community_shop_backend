<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community_shop.backend.mapper.PostFollowMapper">

    <!-- 结果集映射：匹配PostFollow实体与post_follow表字段 -->
    <resultMap id="BaseResultMap" type="com.community_shop.backend.entity.PostFollow">
        <id column="post_follow_id" property="postFollowId"/>
        <result column="post_id" property="postId"/>
        <result column="user_id" property="userId"/>
        <result column="parent_id" property="parentId"/>
        <result column="content" property="content"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 基础字段SQL片段 -->
    <sql id="Base_Column_List">
        post_follow_id, post_id, user_id, parent_id, content, status, create_time, update_time
    </sql>


    <!-- ==================== 基础CRUD ==================== -->
    <insert id="insert" parameterType="com.community_shop.backend.entity.PostFollow">
        INSERT INTO post_follow (
            post_id, user_id, parent_id, content, status, create_time, update_time
        ) VALUES (
                     #{postId}, #{userId}, #{parentId}, #{content},
                     #{status.code,jdbcType=VARCHAR},
                     #{createTime}, #{updateTime}
                 )
    </insert>

    <select id="selectById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM post_follow WHERE post_follow_id = #{postFollowId}
    </select>

    <update id="updateById" parameterType="com.community_shop.backend.entity.PostFollow">
        UPDATE post_follow
        <set>
            <if test="content != null">content = #{content},</if>
            <if test="status != null">status = #{status.code,jdbcType=VARCHAR},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        WHERE post_follow_id = #{postFollowId}
    </update>

    <delete id="deleteById">
        UPDATE post_follow SET status = 'DELETED' WHERE post_follow_id = #{postFollowId}
    </delete>


    <!-- ==================== 关联查询 ==================== -->
    <select id="selectByPostId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM post_follow
        WHERE post_id = #{postId} AND status = 'NORMAL'
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM post_follow
        WHERE user_id = #{userId} AND status = 'NORMAL'
        ORDER BY create_time DESC
    </select>

    <select id="selectByParentId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM post_follow
        WHERE parent_id = #{parentId} AND status = 'NORMAL'
        ORDER BY create_time ASC
    </select>


    <!-- ==================== 统计功能 ==================== -->
    <select id="countByPostId" resultType="int">
        SELECT COUNT(*) FROM post_follow
        WHERE post_id = #{postId} AND status = 'NORMAL'
    </select>

    <select id="countByUserId" resultType="int">
        SELECT COUNT(*) FROM post_follow
        WHERE user_id = #{userId} AND status = 'NORMAL'
    </select>


    <!-- ==================== 批量操作 ==================== -->
    <update id="batchDeleteByPostId">
        UPDATE post_follow SET status = 'DELETED' WHERE post_id = #{postId}
    </update>

    <update id="batchDeleteByUserId">
        UPDATE post_follow SET status = 'DELETED' WHERE user_id = #{userId}
    </update>

</mapper>