<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community_shop.backend.mapper.UserMapper">

    <!-- 结果集映射：匹配User实体与user表字段（无需重复指定typeHandler） -->
    <resultMap id="BaseResultMap" type="com.community_shop.backend.entity.User">
        <id column="user_id" property="userId"/>
        <result column="username" property="username"/>
        <result column="email" property="email"/>
        <result column="phone_number" property="phoneNumber"/>
        <result column="password" property="password"/>
        <result column="avatar_url" property="avatarUrl"/>
        <result column="bio" property="bio"/>
        <result column="gender" property="gender"/> <!-- 自动匹配GenderEnumTypeHandler -->
        <result column="role" property="role"/> <!-- 自动匹配UserRoleEnumTypeHandler -->
        <result column="status" property="status"/> <!-- 自动匹配UserStatusEnumTypeHandler -->
        <result column="credit_score" property="creditScore"/>
        <result column="activity_time" property="activityTime"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <!-- 基础字段SQL片段，减少冗余 -->
    <sql id="Base_Column_List">
        user_id, username, email, phone_number, password, avatar_url, bio, gender, `role`, `status`,
        credit_score, activity_time, create_time
    </sql>


    <!-- ==================== 登录与身份校验 ==================== -->
    <select id="selectByUsername" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM `user` WHERE username = #{username}
    </select>

    <select id="selectByPhone" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM `user` WHERE phone_number = #{phoneNumber}
    </select>

    <select id="selectByEmail" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM `user` WHERE email = #{email}
    </select>


    <!-- ==================== 信用分与统计 ==================== -->
    <update id="updateCreditScore">
        UPDATE `user` SET credit_score = #{score} WHERE user_id = #{userId}
    </update>


    <!-- ==================== 条件查询 ==================== -->

    <select id="selectByRole" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM `user`
        WHERE `role` = #{role.code,jdbcType=VARCHAR} <!-- 简化：无需显式指定typeHandler -->
    </select>

    <!-- 1. 多条件统计用户总数 -->
    <select id="countByQuery" parameterType="com.community_shop.backend.dto.user.UserQueryDTO" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM `user`
        <where>
            <!-- 条件1：状态筛选 -->
            <if test="status != null">
                status = #{status.code,jdbcType=VARCHAR} <!-- 简化：无需显式指定typeHandler -->
            </if>
            <!-- 条件2：角色筛选 -->
            <if test="role != null">
                AND `role` = #{role.code,jdbcType=VARCHAR} <!-- 简化：无需显式指定typeHandler -->
            </if>
            <!-- 条件3：筛选字段+筛选值匹配（如creditScore=80、postCount=5） -->
            <if test="filterField != null and filterValue != null">
                AND ${filterField} = #{filterValue,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <!-- 2. 多条件查询用户列表（支持标签、筛选、排序、分页） -->
    <select id="selectByQuery" parameterType="com.community_shop.backend.dto.user.UserQueryDTO" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM `user`
        <where>
            <!-- 条件1：状态筛选 -->
            <if test="status != null">
                status = #{status.code,jdbcType=VARCHAR} <!-- 简化：无需显式指定typeHandler -->
            </if>
            <!-- 条件2：角色筛选 -->
            <if test="role != null">
                AND `role` = #{role.code,jdbcType=VARCHAR} <!-- 简化：无需显式指定typeHandler -->
            </if>
            <!-- 条件4：筛选字段+筛选值匹配（如creditScore=80、postCount=5） -->
            <if test="filterField != null and filterValue != null">
                AND ${filterField} = #{filterValue,jdbcType=VARCHAR}
            </if>
        </where>
        <!-- 排序：支持枚举指定的排序字段（如createTime、followerCount）和排序方向（ASC/DESC） -->
        <if test="sortField != null and sortDir != null">
            ORDER BY ${sortField} ${sortDir}
        </if>
        <!-- 分页：基于PageParam的pageNum和pageSize计算偏移量（offset = (pageNum-1)*pageSize） -->
        <if test="pageNum != null and pageSize != null">
            LIMIT #{offset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
        </if>
    </select>

</mapper>