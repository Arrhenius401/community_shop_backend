<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community_shop.backend.mapper.EvaluationMapper">

    <!-- 结果集映射：严格匹配evaluation表字段与Evaluation实体 -->
    <resultMap id="BaseResultMap" type="com.community_shop.backend.entity.Evaluation">
        <id column="eval_id" property="evalId"/>
        <result column="order_id" property="orderId"/>
        <result column="user_id" property="userId"/>
        <result column="seller_id" property="sellerId"/>
        <result column="content" property="content"/>
        <result column="score" property="score"/>
        <result column="status" property="status"/> <!-- 自动匹配EvaluationStatusEnumTypeHandler -->
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 基础字段SQL片段（严格对应数据库表字段） -->
    <sql id="Base_Column_List">
        eval_id, order_id, user_id, seller_id, content, score,
        status, create_time, update_time
    </sql>


    <!-- ==================== 基础CRUD ==================== -->
    <update id="updateById" parameterType="com.community_shop.backend.entity.Evaluation">
        UPDATE evaluation
        <set>
            <if test="content != null">content = #{content},</if>
            <if test="score != null">score = #{score},</if>
            <if test="status != null">status = #{status.code,jdbcType=VARCHAR},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        WHERE eval_id = #{evalId}
        AND user_id = #{userId}
    </update>

    <!-- ==================== 关联查询 ==================== -->
    <select id="selectByOrderId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM evaluation
        WHERE order_id = #{orderId}
    </select>

    <select id="selectBySellerId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM evaluation
        WHERE seller_id = #{sellerId}
        AND status = 'VISIBLE'
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectByBuyerId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM evaluation
        WHERE user_id = #{userId}
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 新增：根据查询条件分页查询评价列表 -->
    <select id="selectByQuery" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM evaluation
        WHERE seller_id = #{sellerId}
        AND status = 'NORMAL'
        <if test="score != null">
            AND score = #{score}
        </if>
        <if test="productId != null">
            AND order_id IN (
            SELECT order_id FROM order_item WHERE product_id = #{productId}
            )
        </if>
        <if test="hasImage != null and hasImage">
            AND eval_id IN (
            SELECT eval_id FROM evaluation_image WHERE eval_id IS NOT NULL
            )
        </if>
        <!-- 排序处理 -->
        ORDER BY
        <choose>
            <when test="sortField == 'CREATE_TIME'">
                create_time
            </when>
            <when test="sortField == 'SCORE'">
                score
            </when>

            <otherwise>
                create_time
            </otherwise>
        </choose>
        <if test="sortDir == 'ASC'">
            ASC
        </if>
        <if test="sortDir == 'DESC'">
            DESC
        </if>
        <!-- 分页处理 -->
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 新增：根据查询条件统计评价数量 -->
    <select id="countByQuery" resultType="int">
        SELECT COUNT(*) FROM evaluation
        WHERE seller_id = #{sellerId}
        AND status = 'NORMAL'
        <if test="score != null">
            AND score = #{score}
        </if>
        <if test="productId != null">
            AND order_id IN (
            SELECT order_id FROM order_item WHERE product_id = #{productId}
            )
        </if>
        <if test="hasImage != null and hasImage">
            AND eval_id IN (
            SELECT eval_id FROM evaluation_image WHERE eval_id IS NOT NULL
            )
        </if>
    </select>


    <!-- ==================== 统计分析 ==================== -->
    <select id="selectSellerAverageScore" resultType="java.lang.Double">
        SELECT ROUND(AVG(score), 1) FROM evaluation
        WHERE seller_id = #{sellerId}
          AND status = 'VISIBLE'
    </select>

    <select id="countSellerScoreLevel" resultType="int">
        SELECT COUNT(*) FROM evaluation
        WHERE seller_id = #{sellerId}
          AND status = 'VISIBLE'
          AND score BETWEEN #{minScore} AND #{maxScore}
    </select>

    <select id="countByOrderIds" resultType="int">
        SELECT COUNT(*) FROM evaluation
        WHERE order_id IN
        <foreach collection="orderIds" item="orderId" open="(" separator="," close=")">
            #{orderId}
        </foreach>
        AND status = 'VISIBLE'
    </select>

</mapper>