<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community_shop.backend.mapper.PostMapper">

    <!-- 结果集映射：匹配Post实体与post表字段（无需重复指定typeHandler） -->
    <resultMap id="BaseResultMap" type="com.community_shop.backend.entity.Post">
        <id column="post_id" property="postId"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="user_id" property="userId"/>
        <result column="like_count" property="likeCount"/>
        <result column="post_follow_count" property="postFollowCount"/>
        <result column="is_hot" property="isHot"/>
        <result column="is_essence" property="isEssence"/>
        <result column="is_top" property="isTop"/>
        <result column="status" property="status"/> <!-- 自动匹配PostStatusEnumTypeHandler -->
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 基础字段SQL片段 -->
    <sql id="Base_Column_List">
        post_id, title, content, user_id, like_count, post_follow_count,
        is_hot, is_essence, is_top, `status`, create_time, update_time
    </sql>


    <!-- ==================== 列表查询（多维度排序） ==================== -->

    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM `post`
        WHERE user_id = #{userId}
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectHotPosts" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM `post`
        WHERE `is_hot` = 1 AND `status` = 'NORMAL'
        ORDER BY like_count DESC, post_follow_count DESC
        LIMIT #{limit}
    </select>

    <select id="selectEssencePosts" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM `post`
        WHERE is_essence = 1 AND `status` = 'NORMAL'
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectTopPosts" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM `post`
        WHERE `is_top` = 1 AND `status` = 'NORMAL'
        ORDER BY `create_time` DESC
        LIMIT #{limit}
    </select>

    <!-- 按帖子查询条件统计帖子数量 -->
    <select id="countByQuery" parameterType="com.community_shop.backend.dto.post.PostQueryDTO" resultType="int">
        SELECT COUNT(1) FROM `post`
        <where>
            <!-- 条件1：帖子标题关键词搜索 -->
            <if test="keyword != null and keyword != ''">
                (title LIKE CONCAT('%', #{keyword}, '%') OR content LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <!-- 条件2：帖子状态搜索 -->
            <if test="status != null">
                AND `status` = #{status.code,jdbcType=VARCHAR} <!-- 简化：无需显式指定typeHandler -->
            </if>
            <!-- 条件3：帖子作者搜索 -->
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <!-- 条件4：帖子是否为热门、置顶、精华帖子搜索 -->
            <if test="isHot != null">
                AND is_hot = #{isHot}
            </if>

            <if test="isTop != null">
                AND is_top = #{isTop}
            </if>

            <if test="isEssence != null">
                AND is_essence = #{isEssence}
            </if>
        </where>
    </select>

    <!-- 按帖子查询条件分页查询帖子 -->
    <select id="selectByQuery" parameterType="com.community_shop.backend.dto.post.PostQueryDTO" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM `post`
        <where>
            <!-- 帖子标题关键词搜索 -->
            <if test="query.keyword != null and query.keyword != ''">
                (title LIKE CONCAT('%', #{keyword}, '%') OR content LIKE CONCAT('%', #{keyword}, '%'))
            </if>

            <if test="status != null">
                AND `status` = #{status.code,jdbcType=VARCHAR} <!-- 简化：无需显式指定typeHandler -->
            </if>

            <if test="userId != null">
                AND user_id = #{userId}
            </if>

            <if test="isHot != null">
                AND is_hot = #{isHot}
            </if>

            <if test="isTop != null">
                AND is_top = #{isTop}
            </if>

            <if test="isEssence != null">
                AND is_essence = #{isEssence}
            </if>
            <!-- 分页 -->
            LIMIT #{query.offset}, #{query.limit}
        </where>

        <!-- 排序：支持用户常用的排序方式 -->
        <if test="sortField != null and sortDir != null">
            ORDER BY ${sortField} ${query.sortDir}
        </if>
        <if test="sortField == null">
            <!-- 默认按更新时间倒序 -->
            ORDER BY update_time DESC
        </if>

        <!-- 分页参数 -->
        <if test="pageNum != null and pageSize != null">
            LIMIT #{offset}, #{pageSize}
        </if>
    </select>

    <!-- ==================== 互动数据更新 ==================== -->
    <update id="updateLikeCount">
        UPDATE `post` SET like_count = #{count} WHERE post_id = #{postId}
    </update>

    <update id="updatePostFollowCount">
        UPDATE `post` SET post_follow_count = #{count} WHERE post_id = #{postId}
    </update>


    <!-- ==================== 管理功能 ==================== -->

    <update id="updatePostContent">
        UPDATE `post`
        SET title = #{newTitle},
            content = #{newContent},
            update_time = #{updateTime}
        WHERE post_id = #{postId}
    </update>

    <update id="batchUpdateStatus">
        UPDATE `post`
        SET status = #{status.code,jdbcType=VARCHAR} <!-- 简化：无需显式指定typeHandler -->
        WHERE post_id IN
        <foreach collection="postIds" item="postId" open="(" separator="," close=")">
            #{postId}
        </foreach>
    </update>

</mapper>