<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- 1. 配置属性（可外部引用，如数据库连接信息，通常在Spring Boot中由application.properties管理） -->
    <properties resource="db.properties"/>

    <!-- 2. 全局设置（与application.properties中的mybatis.configuration.*功能一致，二者选其一即可） -->
    <settings>
        <!-- 开启驼峰命名映射（若在application.properties中配置过，此处可不重复） -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!-- 开启二级缓存 -->
        <setting name="cacheEnabled" value="true"/>
        <!-- 打印SQL日志（若在application.properties中配置过，此处可不重复） -->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
        <!-- 其他设置：如延迟加载、默认Executor类型等 -->
        <setting name="lazyLoadingEnabled" value="false"/>
        <setting name="defaultExecutorType" value="SIMPLE"/>
    </settings>

    <!-- 3. 类型别名（与application.properties中的mybatis.type-aliases-package功能一致，二者选其一） -->
    <typeAliases>
        <!-- 方式1：指定单个类的别名 -->
        <typeAlias type="com.community_shop.backend.entity.Order" alias="Order"/>
        <!-- 方式2：扫描包，自动将类名作为别名（推荐，与application.properties配置冲突时以xml为准） -->
        <package name="com.community_shop.backend.entity"/>
    </typeAliases>

    <!-- 4. 类型处理器（与application.properties中的mybatis.type-handlers-package功能一致，二者选其一） -->
    <typeHandlers>
        <!-- 方式1：注册单个处理器 -->
        <typeHandler handler="com.community_shop.backend.handler.OrderStatusEnumTypeHandler"/>
        <!-- 方式2：扫描包，自动注册所有处理器（推荐） -->
        <package name="com.community_shop.backend.handler"/>
    </typeHandlers>

    <!-- 5. 插件（如分页插件、逻辑删除插件等，需引入对应依赖） -->
    <!-- MyBatis-Plus 的分页插件配置需区分场景：若在 Spring Boot 项目中，分页插件应通过 Spring 配置类 注册（而非在 mybatis-config.xml 中用 Spring 标签） -->
    <!-- 删除 mybatis-config.xml 中 plugins 标签的错误配置，改用 Spring Boot 配置类注册插件，彻底避免语法冲突。 -->


    <!-- 6. 环境配置（Spring Boot中通常由数据源自动配置，此处一般无需配置） -->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 7. 映射器（与application.properties中的mybatis.mapper-locations功能一致，二者选其一） -->
    <mappers>
        <!-- 方式1：注册单个Mapper.xml -->
        <mapper resource="mybatis/mapper/UserMapper.xm"/>
        <!-- 方式2：扫描包，注册所有Mapper接口（推荐，需接口与XML同包同名） -->
        <package name="com.community_shop.backend.mapper"/>
    </mappers>
</configuration>