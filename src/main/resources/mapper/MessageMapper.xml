<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community_shop.backend.mapper.MessageMapper">

    <!-- 结果集映射：严格匹配message表字段与Message实体 -->
    <resultMap id="BaseResultMap" type="com.community_shop.backend.entity.Message">
        <id column="msg_id" property="msgId"/>
        <result column="receiver_id" property="receiverId"/>
        <result column="sender_id" property="senderId"/>
        <result column="type" property="type"/> <!-- 自动匹配MessageTypeEnumTypeHandler -->
        <result column="is_read" property="isRead"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="order_id" property="orderId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 基础字段SQL片段（严格对应数据库表字段） -->
    <sql id="Base_Column_List">
        msg_id, receiver_id, sender_id, `type`, is_read, is_deleted,
        title, content, order_id, create_time, update_time
    </sql>


    <!-- ==================== 状态更新 ==================== -->
    <update id="updateReadStatus">
        UPDATE message
        SET is_read = #{isRead},
            update_time = NOW()
        WHERE msg_id = #{msgId}
          AND is_deleted = 0 -- 仅更新未删除的消息
    </update>

    <update id="updateDeleteStatus">
        UPDATE message
        SET is_deleted = #{isDeleted},
            update_time = NOW()
        WHERE msg_id = #{msgId}
    </update>

    <update id="batchUpdateReadStatus">
        UPDATE message
        SET is_read = #{isRead},
        update_time = NOW()
        WHERE msg_id IN
        <foreach collection="msgIds" item="msgId" open="(" separator="," close=")">
            #{msgId}
        </foreach>
        AND is_deleted = 0 -- 仅更新未删除的消息
    </update>

    <update id="batchUpdateDeleteStatus">
        UPDATE message
        SET is_deleted = #{isDeleted},
            update_time = NOW()
        WHERE receiver_id = #{receiverId}
    </update>


    <!-- ==================== 查询与统计 ==================== -->
    <select id="selectByReceiver" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM `message`
        WHERE receiver_id = #{receiverId}
        AND is_deleted = 0 -- 仅查询未删除的消息
        <if test="msgType != null">
            AND type = #{msgType.code,jdbcType=VARCHAR}
        </if>
        ORDER BY create_time DESC -- 按发送时间倒序（最新消息在前）
        LIMIT #{offset}, #{limit}
    </select>

    <select id="countByReceiver" resultType="int">
        SELECT COUNT(1) FROM `message`
        WHERE receiver_id = #{receiverId}
        AND is_deleted = 0
        <if test="msgType != null">
            AND `type` = #{msgType.code,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="countUnread" resultType="int">
        SELECT COUNT(1) FROM `message`
        WHERE receiver_id = #{receiverId}
          AND is_read = 0
          AND is_deleted = 0
        -- 利用联合索引idx_receiver_status提升查询效率
    </select>

    <select id="countUnreadByType" resultType="int">
        SELECT COUNT(1) FROM message
        WHERE receiver_id = #{receiverId}
          AND type = #{msgType.code,jdbcType=VARCHAR}
          AND is_read = 0
          AND is_deleted = 0
    </select>

    <!-- 复杂查询条件统计 -->
    <select id="countByQuery" resultType="int">
        SELECT COUNT(1) FROM `message`
        <where>
            <!-- 条件1：筛选状态消息 -->
            `type` = #{query.type.code,jdbcType=VARCHAR}
            <!-- 条件2：筛选接受者 -->
            <if test="query.receiverId != null">
                AND receiver_id = #{query.receiverId}
            </if>
            <!-- 状态3：筛选已读消息 -->
            <if test="query.isRead != null">
                AND `is_read` = #{query.isRead}
            </if>
            <!-- 条件4：关键词检索 -->
            <if test="query.keyword != null and query.keyword != ''">
                AND (title LIKE CONCAT('%', #{query.keyword}, '%')
                OR content LIKE CONCAT('%', #{query.keyword}, '%'))
            </if>
        </where>
    </select>

    <!-- 复杂查询条件分页查询 -->
    <select id="selectByQuery" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM message
        <where>
            <!-- 条件1：筛选状态消息 -->
            `type` = #{query.type.code,jdbcType=VARCHAR}
            <!-- 条件2：筛选接受者 -->
            <if test="query.receiverId != null">
                AND receiver_id = #{query.receiverId}
            </if>
            <!-- 状态3：筛选已读消息 -->
            <if test="query.isRead != null">
                AND `is_read` = #{query.isRead}
            </if>
            <!-- 条件4：关键词检索 -->
            <if test="query.keyword != null and keyword != ''">
                (AND (title LIKE CONCAT('%', #{query.keyword}, '%')
                OR content LIKE CONCAT('%', #{query.keyword}, '%')))
            </if>
        </where>

        <!-- 排序：支持用户常用的排序方式 -->
        <if test="query.sortField != null and query.sortDir != null">
            ORDER BY ${query.sortField} ${query.sortDir}
        </if>
        <if test="query.sortField == null">
            <!-- 默认按更新时间倒序 -->
            ORDER BY create_time DESC
        </if>

        <!-- 分页处理 -->
        LIMIT #{query.offset}, #{query.pageSize}
    </select>

    <!-- 私聊查询条件统计 -->
    <select id="countByPrivateQuery" resultType="int">
        SELECT COUNT(1) FROM message
        <where>
            <!-- 条件1：未删除的消息 -->
            is_deleted = 0
            <!-- 条件2：私聊双方的消息（当前用户是发送者且对方是接收者，或反之） -->
            AND ((sender_id = #{query.userId} AND receiver_id = #{query.partnerId})
            OR (sender_id = #{query.partnerId} AND receiver_id = #{query.userId}))
            <!-- 条件3：状态筛选 -->
            <if test="query.type != null">
                AND type = #{query.type.code,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <!-- 私聊查询条件分页查询 -->
    <select id="selectByPrivateQuery" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM message
        <where>
            <!-- 条件1：未删除的消息 -->
            is_deleted = 0
            <!-- 条件2：私聊双方的消息（当前用户是发送者且对方是接收者，或反之） -->
            AND ((sender_id = #{query.userId} AND receiver_id = #{query.partnerId})
            OR (sender_id = #{query.partnerId} AND receiver_id = #{query.userId}))
            <!-- 条件3：状态筛选 -->
            <if test="query.type != null">
                AND type = #{query.type.code,jdbcType=VARCHAR}
            </if>
        </where>

        <!-- 私聊默认按时间升序（最早的消息在前） -->
        ORDER BY create_time ASC
        <!-- 分页处理 -->
        LIMIT #{query.offset}, #{query.pageSize}
    </select>

</mapper>